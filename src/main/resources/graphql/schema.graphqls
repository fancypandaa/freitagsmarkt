schema {
    query: Query
    mutation: Mutation
}
enum ChassisType {
    LCV
    LIGHT_WEIGHT
    MPV
    PICKUP
    SUV
    SEDAN
    STATION_WAG
}
enum FuelType {
    DIESEL
    ELECTRIC
    ETHANOL
    FUEL_CELL
    LPG
    NATURAL_GAS
    PETROL
    HYBRID_PETROL
    HYBRID_DIESEL
    PLUG_IN_HYBRID_PETROL
    PLUG_IN_HYBRID_DIESEL
    MID_H_P
}
type Ads {
    id: ID!
    daysOfSale: Int
    Status: String
    published: String
    sellerId: Int
    carId: Int
}
type Brakes{
    id:ID!
    parkingBrake:String
    manual:String
     frontBrakes:String!
    cooling:String
   rearBrakes:String!
}
type CarBrand {
    id:ID!
    name:String
    countryOfOrigin:String
    productionYears:String
    series:String
    logoUrl:String
    cars:[Car]
}

type Car {
    id: ID!
    model:String
    city: String
    days: Int
    price: String
    mileage: String
    generation: String
    saleStatus:String
    engine:Engine
    dimensionsAndWeight:DimensionsAndWeight
    exterior:Exterior
    interior:Interior
    features:Features
    safetyAndSecurity:SafetyAndSecurity
    carBrandId:Int
    sellerId:Int
}
type DimensionsAndWeight{
    id:ID!
    length:Float
    width:Float
    widthWithMirrors:Float
    height:Float
    trackFront:Float
    trackRear:Float
    wheelBase:Float
    overhangFront:Float
    overhangRear:Float
    turningCircle:Float
    groundClearance:Float
    interior:JSON
    weight:JSON
}
type Engine{
    id:ID!
    engineSpecification:JSON
    engineConfiguration:JSON
    engineFluids:JSON
    serviceIntervals:JSON
    brakes:Brakes
    suspensions:Suspensions
    fuel:Fuel
    transmission:Transmission
}
type EXEquipment{
    id:ID!
    sideMirrors :JSON
    windscreenWipers :JSON
    windows :JSON
    lights :JSON
    rimsAndTires :JSON
    otherEquipments :JSON
    tireDimensions :JSON
    roofColour:String
    accent:String
    doorHandles:String
}
type Exterior{
    id:ID!
    chassis:ChassisType!
    numberOfDoors:String
    frontDoors:String
    backDoors:String
    platform:String
    chassisOptions:JSON
    exteriorEquipment:EXEquipment

}
type Features{
    id:ID!
    comfort:JSON
    accessories:JSON
    others:JSON
}
type Fuel{
    id:ID!
    fuel:FuelType!
    tankVolume:String
    fuelCapPosition:String
    fuelConsumptionNEDC:JSON
    co2Combined:String
    topSpeed:String
    acceleration:String
    types:Int
}

type Seller {
    id:ID!
    type:String
    name:String
    phone:String
    sellerWebsite:String
    ads:[Ads]
    cars:[Car]
}
type SafetyAndSecurity{
    id:ID!
     seatBelt:JSON
    assistSystems:JSON
     brakeSystem:JSON
     sensors:JSON
     safetyTesting:JSON
     airbags:JSON
     childProtection:JSON
     othersFeatures:JSON
}
type InEquipments{
    id:ID!
    steeringWheels:JSON
    trunk:JSON
    design:JSON
    seats:JSON
    rimsAndTires:JSON
    otherEquipments:JSON
    tireDimensions:JSON
}
type Interior{
    id:ID!
    instrumentCluster:JSON
    connectivity:JSON
    climateControl:JSON
    displays:JSON
    speakers:JSON
    rear_viewMirror:JSON
    interiorStorage:JSON
    lights:JSON
    interiorEquipments:InEquipments
}
type Suspensions{
    id:ID!
      springFront:String
      springRear:String
      anti_rollBar:String
    suspensionRear:JSON
    suspensionFront:JSON
}
type Transmission{
    id:ID!
    driveTrain:String
    transmission:String
}
type CustomFuel{
    fuelType:String!
    types:Int!
}
type CustomExterior{
    chassis:String!
    types:Int!
}

type Query {
    findAdById(id: ID!): Ads
    findBrakesById(id:ID):Brakes
    findDimAndWeightById(id:ID):DimensionsAndWeight
    findFeaturesById(id:ID):Features
    findBySecurityId(id:ID):SafetyAndSecurity
    findExteriorById(id:ID):Exterior
    findInteriorId(id:ID):Interior
    findBySellerId(id:ID):Seller
    findCarById(id:ID):Car
    findCarBrandById(id:ID):CarBrand
    findByProductionYearsAndSeries( page:Int=0,size:Int = 10,series:String, productionYears:Int):[CarBrand]
    findBySpecsAndPrice(page:Int=0,size:Int = 10,series:String, productionYears:Int):[Car]
    listAllCars(page:Int = 0,size:Int = 10):[Car]
    listAllBrands(page:Int = 0,size:Int = 10):[CarBrand]
    listAllSeller(page:Int = 0,size:Int=10):[Seller]
    listAllEngine(page:Int = 0 , size:Int=10):[Engine]
    listAds(page:Int = 0,size:Int = 10):[Ads]
    getFuelTypesByGroups:[CustomFuel]
    getChassisTypesByGroups:[CustomExterior]
}
input User {
    userName: String!
    email: String!
    password: String!
}
input CredentialsInput {
    username: String!
    password: String!
}
type Mutation{
    createUser(userName: String!,email: String!,password: String!): String
    login(credentials: CredentialsInput!): String
}

#scalar Date
scalar JSON
